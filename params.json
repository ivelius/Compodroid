{"name":"Compodroid","tagline":"Architectural Android Framework.","body":"### What is Compodroid ?\r\nCompodroid is an [Android](https://www.android.com/) library that allows you to scatter your code around target specific \"components\" , rather than writing the code inside the target class itself. Compodroid turns any class into a \"set of components\" that operate independently allowing hight level of code modularity. Being design specifically with Android in mind , Compodroid has a build in support for all [Android](https://www.android.com/) core elements such as : [Activities](http://developer.android.com/reference/android/app/Activity.html) , [Fragments](http://developer.android.com/reference/android/app/Fragment.html) , [Services](http://developer.android.com/reference/android/app/Service.html) , [Broadcast Recievers](http://developer.android.com/reference/android/content/BroadcastReceiver.html) ,etc... \r\n\r\n### Compodroid Architecture\r\nCompodroid main idea is to stay simple and thin , while highly scalable.\r\nBasically the entire library is [this](https://github.com/ivelius/Compodroid/tree/master/compodroid-lib/src/main/java/com/yan/compodroid/core) simple package. Everything else is just an extension of the core concept.\r\nTo make Compodroid [Android](https://www.android.com/) friendly ,the main extensions are [Compodroid Activity](https://github.com/ivelius/Compodroid/tree/master/compodroid-lib/src/main/java/com/yan/compodroid/activity) and [Compodroid Fragment](https://github.com/ivelius/Compodroid/tree/master/compodroid-lib/src/main/java/com/yan/compodroid/fragment) packages that are shipped built in into [compodroid-lib](https://github.com/ivelius/Compodroid/tree/master/compodroid-lib).\r\n\r\n### How to use Compodroid ?\r\nHave a look at [examples](https://github.com/ivelius/Compodroid/tree/master/app/src/main/java/com/yan/compodroidtest).\r\n\r\n\r\n\r\n\r\n### Adding Compodroid \"Plugins\"\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here [using GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/), select a template crafted by a designer, and publish. After your page is generated, you can check out the new `gh-pages` branch locally. If you’re using GitHub Desktop, simply sync your repository and you’ll see the new branch.\r\n\r\n### Creating your own components\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here [using GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/), select a template crafted by a designer, and publish. After your page is generated, you can check out the new `gh-pages` branch locally. If you’re using GitHub Desktop, simply sync your repository and you’ll see the new branch.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}